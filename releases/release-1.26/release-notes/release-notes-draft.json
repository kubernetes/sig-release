{
  "111023": {
    "commit": "d1c0171aed848900daa07212370c991c19c318b1",
    "text": "'Added a `ResourceClaim` API (in the `resource.k8s.io/v1alpha1` API group and\nbehind the `DynamicResourceAllocation` feature gate).\nThe new API is now more flexible than the existing Device Plugins feature of Kubernetes because it\nallows Pods to request (claim) special kinds of resources, which can be available at node level, cluster\nlevel, or following any other model you implement.'",
    "markdown": "'Added a `ResourceClaim` API (in the `resource.k8s.io/v1alpha1` API group and\n  behind the `DynamicResourceAllocation` feature gate).\n  The new API is now more flexible than the existing Device Plugins feature of Kubernetes because it\n  allows Pods to request (claim) special kinds of resources, which can be available at node level, cluster\n  level, or following any other model you implement.' ([#111023](https://github.com/kubernetes/kubernetes/pull/111023), [@pohly](https://github.com/pohly))",
    "documentation": [
      {
        "description": "[KEP]",
        "url": "https://github.com/kubernetes/enhancements/issues/3063",
        "type": "KEP"
      }
    ],
    "author": "pohly",
    "author_url": "https://github.com/pohly",
    "pr_url": "https://github.com/kubernetes/kubernetes/pull/111023",
    "pr_number": 111023,
    "areas": [
      "test",
      "kubelet",
      "apiserver",
      "kubectl",
      "cloudprovider",
      "provider/gcp",
      "release-eng",
      "code-generation",
      "e2e-test-framework",
      "dependency"
    ],
    "kinds": [
      "api-change",
      "feature"
    ],
    "sigs": [
      "scheduling",
      "storage",
      "node",
      "api-machinery",
      "cluster-lifecycle",
      "auth",
      "apps",
      "cli",
      "instrumentation",
      "testing",
      "release",
      "architecture",
      "cloud-provider"
    ],
    "feature": true,
    "duplicate": true,
    "duplicate_kind": true
  },
  "112744": {
    "commit": "ff19efdf9bd2d1f4abece3229f1e36c1d58b96df",
    "text": "Added a feature that allows a `StatefulSet` to start numbering replicas from an arbitrary non-negative ordinal, using the `.spec.ordinals.start` field.",
    "markdown": "Added a feature that allows a `StatefulSet` to start numbering replicas from an arbitrary non-negative ordinal, using the `.spec.ordinals.start` field. ([#112744](https://github.com/kubernetes/kubernetes/pull/112744), [@pwschuurman](https://github.com/pwschuurman))",
    "author": "pwschuurman",
    "author_url": "https://github.com/pwschuurman",
    "pr_url": "https://github.com/kubernetes/kubernetes/pull/112744",
    "pr_number": 112744,
    "areas": [
      "code-generation"
    ],
    "kinds": [
      "api-change",
      "feature"
    ],
    "sigs": [
      "api-machinery",
      "apps"
    ],
    "feature": true,
    "duplicate": true,
    "duplicate_kind": true
  },
  "113171": {
    "commit": "8058e8eff8ba8541ddd48cd54bbb19a3fce62c09",
    "text": "Aggregated discovery will be alpha and can be toggled with the `AggregatedDiscoveryEndpoint` feature flag.",
    "markdown": "Aggregated discovery will be alpha and can be toggled with the `AggregatedDiscoveryEndpoint` feature flag. ([#113171](https://github.com/kubernetes/kubernetes/pull/113171), [@Jefftree](https://github.com/Jefftree))",
    "author": "Jefftree",
    "author_url": "https://github.com/Jefftree",
    "pr_url": "https://github.com/kubernetes/kubernetes/pull/113171",
    "pr_number": 113171,
    "areas": [
      "test",
      "kubelet",
      "apiserver",
      "kubectl",
      "cloudprovider",
      "provider/gcp",
      "release-eng",
      "kubeadm",
      "conformance",
      "code-generation",
      "ipvs",
      "e2e-test-framework",
      "dependency",
      "stable-metrics"
    ],
    "kinds": [
      "api-change",
      "feature"
    ],
    "sigs": [
      "network",
      "scalability",
      "scheduling",
      "storage",
      "node",
      "api-machinery",
      "cluster-lifecycle",
      "autoscaling",
      "auth",
      "apps",
      "cli",
      "testing",
      "release",
      "architecture",
      "cloud-provider"
    ],
    "feature": true,
    "duplicate": true,
    "duplicate_kind": true
  },
  "113186": {
    "commit": "d94261e904c90578e913c42c4d2a0fc8cb30937f",
    "text": "Added a new namespace alpha field to `DataSourceRef` field in `PersistentVolumeClaim` API.",
    "markdown": "Added a new namespace alpha field to `DataSourceRef` field in `PersistentVolumeClaim` API. ([#113186](https://github.com/kubernetes/kubernetes/pull/113186), [@ttakahashi21](https://github.com/ttakahashi21))",
    "documentation": [
      {
        "description": "[KEP]",
        "url": "https://github.com/kubernetes/enhancements/tree/master/keps/sig-storage/3294-provision-volumes-from-cross-namespace-snapshots",
        "type": "KEP"
      }
    ],
    "author": "ttakahashi21",
    "author_url": "https://github.com/ttakahashi21",
    "pr_url": "https://github.com/kubernetes/kubernetes/pull/113186",
    "pr_number": 113186,
    "areas": [
      "test",
      "code-generation"
    ],
    "kinds": [
      "api-change",
      "feature"
    ],
    "sigs": [
      "storage",
      "api-machinery",
      "apps",
      "testing"
    ],
    "feature": true,
    "duplicate": true,
    "duplicate_kind": true
  },
  "113360": {
    "commit": "7e0e0c8ec3a6f68db0a9c259836a9ad8792fa67b",
    "text": "Enabled the \"Retriable and non-retriable pod failures for jobs\" feature into beta.",
    "markdown": "Enabled the \"Retriable and non-retriable pod failures for jobs\" feature into beta. ([#113360](https://github.com/kubernetes/kubernetes/pull/113360), [@mimowo](https://github.com/mimowo))",
    "documentation": [
      {
        "description": "[KEP]",
        "url": "https://github.com/kubernetes/enhancements/tree/master/keps/sig-apps/3329-retriable-and-non-retriable-failures",
        "type": "KEP"
      }
    ],
    "author": "mimowo",
    "author_url": "https://github.com/mimowo",
    "pr_url": "https://github.com/kubernetes/kubernetes/pull/113360",
    "pr_number": 113360,
    "areas": [
      "test",
      "kubelet",
      "e2e-test-framework"
    ],
    "kinds": [
      "api-change",
      "feature"
    ],
    "sigs": [
      "scheduling",
      "node",
      "auth",
      "apps",
      "testing"
    ],
    "feature": true,
    "duplicate": true,
    "duplicate_kind": true
  },
  "113375": {
    "commit": "cc704f97784c3359db4690b97201ebfe6b481869",
    "text": "'`PodDisruptionBudget` now adds an alpha `spec.unhealthyPodEvictionPolicy` field.\nWhen the `PDBUnhealthyPodEvictionPolicy` feature-gate is enabled in `kube-apiserver`,\nsetting this field to `\"AlwaysAllow\"` allows pods to be evicted if they do not\nhave a ready condition, regardless of whether the PodDisruptionBudget is currently\nhealthy.'\n",
    "markdown": "'`PodDisruptionBudget` now adds an alpha `spec.unhealthyPodEvictionPolicy` field.\n  When the `PDBUnhealthyPodEvictionPolicy` feature-gate is enabled in `kube-apiserver`,\n  setting this field to `\"AlwaysAllow\"` allows pods to be evicted if they do not\n  have a ready condition, regardless of whether the PodDisruptionBudget is currently\n  healthy.'\n   ([#113375](https://github.com/kubernetes/kubernetes/pull/113375), [@atiratree](https://github.com/atiratree))",
    "documentation": [
      {
        "description": "[KEP]",
        "url": "https://github.com/kubernetes/enhancements/tree/master/keps/sig-apps/3017-pod-healthy-policy-for-pdb",
        "type": "KEP"
      }
    ],
    "author": "atiratree",
    "author_url": "https://github.com/atiratree",
    "pr_url": "https://github.com/kubernetes/kubernetes/pull/113375",
    "pr_number": 113375,
    "areas": [
      "test",
      "code-generation"
    ],
    "kinds": [
      "api-change",
      "feature"
    ],
    "sigs": [
      "api-machinery",
      "auth",
      "apps",
      "testing"
    ],
    "feature": true,
    "duplicate": true,
    "duplicate_kind": true
  },
  "113485": {
    "commit": "1193a9abcbd6c6ce6fc7d4ce38872f1933ef5159",
    "text": "'Priority and Fairness has introduced a new feature called _borrowing_ that allows an API priority level\nto borrow a number of seats from other priority level(s). As a cluster operator, you can enable borrowing\nfor a certain priority level configuration object via the two newly introduced fields `lendablePercent`, and\n`borrowingLimitPercent` located under the `.spec.limited` field of the designated priority level.\nThis change added the following metrics:\n- `apiserver_flowcontrol_nominal_limit_seats`: Nominal number of execution seats configured for each priority level\n- `apiserver_flowcontrol_lower_limit_seats`: Configured lower bound on number of execution seats available to each priority level\n- `apiserver_flowcontrol_upper_limit_seats`: Configured upper bound on number of execution seats available to each priority level\n- `apiserver_flowcontrol_demand_seats`: Observations, at the end of every nanosecond, of (the number of seats each priority level could use) / (nominal number of seats for that level)\n- `apiserver_flowcontrol_demand_seats_high_watermark`: High watermark, over last adjustment period, of demand_seats\n- `apiserver_flowcontrol_demand_seats_average`: Time-weighted average, over last adjustment period, of demand_seats\n- `apiserver_flowcontrol_demand_seats_stdev`: Time-weighted standard deviation, over last adjustment period, of demand_seats\n- `apiserver_flowcontrol_demand_seats_smoothed`: Smoothed seat demands\n- `apiserver_flowcontrol_target_seats`: Seat allocation targets\n- `apiserver_flowcontrol_seat_fair_frac`: Fair fraction of server's concurrency to allocate to each priority level that can use it\n- `apiserver_flowcontrol_current_limit_seats`: current derived number of execution seats available to each priority level\nThe possibility of borrowing means that the old metric `apiserver_flowcontrol_request_concurrency_limit` can no longer mean both the configured concurrency limit and the enforced concurrency limit. Henceforth it means the configured concurrency limit.'",
    "markdown": "'Priority and Fairness has introduced a new feature called _borrowing_ that allows an API priority level\n  to borrow a number of seats from other priority level(s). As a cluster operator, you can enable borrowing\n  for a certain priority level configuration object via the two newly introduced fields `lendablePercent`, and\n  `borrowingLimitPercent` located under the `.spec.limited` field of the designated priority level.\n  This change added the following metrics:\n  - `apiserver_flowcontrol_nominal_limit_seats`: Nominal number of execution seats configured for each priority level\n  - `apiserver_flowcontrol_lower_limit_seats`: Configured lower bound on number of execution seats available to each priority level\n  - `apiserver_flowcontrol_upper_limit_seats`: Configured upper bound on number of execution seats available to each priority level\n  - `apiserver_flowcontrol_demand_seats`: Observations, at the end of every nanosecond, of (the number of seats each priority level could use) / (nominal number of seats for that level)\n  - `apiserver_flowcontrol_demand_seats_high_watermark`: High watermark, over last adjustment period, of demand_seats\n  - `apiserver_flowcontrol_demand_seats_average`: Time-weighted average, over last adjustment period, of demand_seats\n  - `apiserver_flowcontrol_demand_seats_stdev`: Time-weighted standard deviation, over last adjustment period, of demand_seats\n  - `apiserver_flowcontrol_demand_seats_smoothed`: Smoothed seat demands\n  - `apiserver_flowcontrol_target_seats`: Seat allocation targets\n  - `apiserver_flowcontrol_seat_fair_frac`: Fair fraction of server's concurrency to allocate to each priority level that can use it\n  - `apiserver_flowcontrol_current_limit_seats`: current derived number of execution seats available to each priority level\n  The possibility of borrowing means that the old metric `apiserver_flowcontrol_request_concurrency_limit` can no longer mean both the configured concurrency limit and the enforced concurrency limit. Henceforth it means the configured concurrency limit.' ([#113485](https://github.com/kubernetes/kubernetes/pull/113485), [@MikeSpreitzer](https://github.com/MikeSpreitzer))",
    "documentation": [
      {
        "description": "[KEP]",
        "url": "https://github.com/kubernetes/enhancements/tree/master/keps/sig-api-machinery/1040-priority-and-fairness#dispatching",
        "type": "KEP"
      }
    ],
    "author": "MikeSpreitzer",
    "author_url": "https://github.com/MikeSpreitzer",
    "pr_url": "https://github.com/kubernetes/kubernetes/pull/113485",
    "pr_number": 113485,
    "areas": [
      "test",
      "apiserver",
      "code-generation"
    ],
    "kinds": [
      "api-change",
      "feature"
    ],
    "sigs": [
      "api-machinery",
      "testing"
    ],
    "feature": true,
    "duplicate": true,
    "duplicate_kind": true
  },
  "113501": {
    "commit": "70263d55b281878121684337c0a7f205dabba5ec",
    "text": "kubelet: fixed nil pointer in reflector start for standalone mode.",
    "markdown": "Kubelet: fixed nil pointer in reflector start for standalone mode. ([#113501](https://github.com/kubernetes/kubernetes/pull/113501), [@pacoxu](https://github.com/pacoxu))",
    "author": "pacoxu",
    "author_url": "https://github.com/pacoxu",
    "pr_url": "https://github.com/kubernetes/kubernetes/pull/113501",
    "pr_number": 113501,
    "areas": [
      "kubelet"
    ],
    "kinds": [
      "bug"
    ],
    "sigs": [
      "node"
    ]
  },
  "113735": {
    "commit": "72a25b17726b3059982dcc740fb8d05ec0c24f95",
    "text": "Renamed the feature gate for CEL in Admission Control to `ValidatingAdmissionPolicy`.",
    "markdown": "Renamed the feature gate for CEL in Admission Control to `ValidatingAdmissionPolicy`. ([#113735](https://github.com/kubernetes/kubernetes/pull/113735), [@cici37](https://github.com/cici37))",
    "documentation": [
      {
        "description": "[KEP]",
        "url": "https://github.com/kubernetes/enhancements/tree/master/keps/sig-api-machinery/3488-cel-admission-control",
        "type": "KEP"
      }
    ],
    "author": "cici37",
    "author_url": "https://github.com/cici37",
    "pr_url": "https://github.com/kubernetes/kubernetes/pull/113735",
    "pr_number": 113735,
    "areas": [
      "test",
      "apiserver"
    ],
    "kinds": [
      "cleanup"
    ],
    "sigs": [
      "api-machinery",
      "testing"
    ],
    "duplicate": true
  },
  "113754": {
    "commit": "e9ef6ee8b363b4e9b2d2d852ecc436d9bfdbd189",
    "text": "'`kubelet_kubelet_credential_provider_plugin_duration` was renamed to `kubelet_credential_provider_plugin_duration`\nand `kubelet_kubelet_credential_provider_plugin_errors` was renamed to `kubelet_credential_provider_plugin_errors`.'\n",
    "markdown": "'`kubelet_kubelet_credential_provider_plugin_duration` was renamed to `kubelet_credential_provider_plugin_duration`\n  and `kubelet_kubelet_credential_provider_plugin_errors` was renamed to `kubelet_credential_provider_plugin_errors`.'\n   ([#113754](https://github.com/kubernetes/kubernetes/pull/113754), [@logicalhan](https://github.com/logicalhan))",
    "author": "logicalhan",
    "author_url": "https://github.com/logicalhan",
    "pr_url": "https://github.com/kubernetes/kubernetes/pull/113754",
    "pr_number": 113754,
    "kinds": [
      "cleanup"
    ],
    "sigs": [
      "node",
      "instrumentation"
    ],
    "duplicate": true
  },
  "113769": {
    "commit": "37e73b419e455db34f5fe3e8d815418680ab23df",
    "text": "Updated `cAdvisor` to `v0.46.0`.",
    "markdown": "Updated `cAdvisor` to `v0.46.0`. ([#113769](https://github.com/kubernetes/kubernetes/pull/113769), [@bobbypage](https://github.com/bobbypage))",
    "author": "bobbypage",
    "author_url": "https://github.com/bobbypage",
    "pr_url": "https://github.com/kubernetes/kubernetes/pull/113769",
    "pr_number": 113769,
    "areas": [
      "kubectl",
      "cloudprovider",
      "dependency"
    ],
    "kinds": [
      "feature"
    ],
    "sigs": [
      "storage",
      "node",
      "cli",
      "architecture",
      "cloud-provider"
    ],
    "feature": true,
    "duplicate": true
  },
  "113819": {
    "commit": "763f68ef77ec0745d0f0772f381bc7af6001121a",
    "text": "Promoted `kubectl alpha events` to `kubectl events`.",
    "markdown": "Promoted `kubectl alpha events` to `kubectl events`. ([#113819](https://github.com/kubernetes/kubernetes/pull/113819), [@soltysh](https://github.com/soltysh))",
    "documentation": [
      {
        "description": "[KEP]",
        "url": "https://github.com/kubernetes/enhancements/issues/1440",
        "type": "KEP"
      }
    ],
    "author": "soltysh",
    "author_url": "https://github.com/soltysh",
    "pr_url": "https://github.com/kubernetes/kubernetes/pull/113819",
    "pr_number": 113819,
    "areas": [
      "test",
      "kubectl"
    ],
    "kinds": [
      "feature"
    ],
    "sigs": [
      "cli",
      "testing"
    ],
    "feature": true,
    "duplicate": true
  },
  "113856": {
    "commit": "af7cc0a60fa01138d56d9f46eee5cd06d01d20f1",
    "text": "Known issue: Job field `.spec.podFailurePolicy.rules[*].onExitCode` might be ignored if the Pod is deleted before it terminates.",
    "markdown": "Known issue: Job field `.spec.podFailurePolicy.rules[*].onExitCode` might be ignored if the Pod is deleted before it terminates. ([#113856](https://github.com/kubernetes/kubernetes/pull/113856), [@alculquicondor](https://github.com/alculquicondor))",
    "documentation": [
      {
        "description": "[KEP]",
        "url": "https://github.com/kubernetes/enhancements/tree/e3f3faeb899e5739db4bbbd60a56715f6a4e8b45/keps/sig-apps/3329-retriable-and-non-retriable-failures",
        "type": "KEP"
      }
    ],
    "author": "alculquicondor",
    "author_url": "https://github.com/alculquicondor",
    "pr_url": "https://github.com/kubernetes/kubernetes/pull/113856",
    "pr_number": 113856,
    "kinds": [
      "bug"
    ],
    "sigs": [
      "apps"
    ]
  }
}